"use client";

import { Carousel } from "@mantine/carousel";
import {
  Box,
  Card,
  Container,
  Grid,
  Image,
  SimpleGrid,
  Text,
  Title,
} from "@mantine/core";
import { useMediaQuery } from "@mantine/hooks";
import { motion } from "framer-motion";
import { useEffect, useRef, useState } from "react";

const activities = [
  {
    id: "education",
    title: "√âducation Chiot",
    image: "/icons/education.png",
    description:
      "L‚Äô√©ducation du chiot est une √©tape cruciale : elle pose les bases d‚Äôune vie √©quilibr√©e. On y travaille la propret√©, les premiers ordres (assis, viens, pas bouger), la socialisation avec d‚Äôautres chiens et humains, ainsi que la gestion des √©motions. Ces s√©ances sont ludiques, courtes et adapt√©es au rythme du chiot.",
    details:
      "Dur√©e : 45 min | Lieu : √Ä domicile ou ext√©rieur calme | Objectif : autonomie, √©coute, socialisation.",
  },
  {
    id: "reeducation",
    title: "R√©√©ducation",
    image: "/icons/reeducation.png",
    description:
      "La r√©√©ducation comportementale vise √† accompagner les chiens pr√©sentant des troubles (peur, anxi√©t√©, agressivit√©, destruction). Chaque s√©ance est personnalis√©e, et l‚Äôobjectif est de restaurer un comportement serein, par des exercices pratiques, des jeux, et un travail sur la relation ma√Ætre/chien.",
    details:
      "Dur√©e : 1h | Bilan initial obligatoire | Adapt√© selon le niveau de r√©activit√© du chien.",
  },
  {
    id: "balade",
    title: "Balades √©ducatives",
    image: "/icons/balade.png",
    description:
      "Les balades √©ducatives permettent de renforcer les apprentissages dans un cadre naturel. C‚Äôest l‚Äôoccasion de pratiquer les ordres en situation r√©elle, d‚Äôam√©liorer le rappel, la gestion de la laisse et la sociabilisation avec l‚Äôenvironnement. Ces moments sont √† la fois p√©dagogiques et relaxants.",
    details:
      "Dur√©e : 1h | En groupe ou individuel | D√©part possible √† domicile.",
  },
  {
    id: "agility",
    title: "Initiation Agility",
    image: "/icons/agility.png",
    description:
      "L‚Äôagility est une activit√© ludique et stimulante qui favorise la complicit√© entre le chien et son ma√Ætre. On y d√©couvre les sauts, tunnels, slaloms‚Ä¶ sans pression ni comp√©tition. Adapt√© √† tous types de chiens, c‚Äôest aussi un excellent moyen de canaliser l‚Äô√©nergie et de s‚Äôamuser ensemble.",
    details:
      "Dur√©e : 45 min | En terrain s√©curis√© | Pr√©-requis : chien sociable et motiv√©.",
  },
];

const MotionCard = motion(Card);
const MotionGrid = motion(Grid);

export default function ActivitySelectorPage() {
  const [selected, setSelected] = useState("education");
  const active = activities.find((a) => a.id === selected);
  const detailRef = useRef(null);
  const isMobile = useMediaQuery("(max-width: 768px)");

  useEffect(() => {
    if (detailRef.current) {
      detailRef.current.scrollIntoView({ behavior: "smooth" });
    }
  }, [selected]);

  return (
    <Box py="xl" bg="#FEFAE0">
      <Container size="lg">
        <Title order={2} ta="center" c="#283618" mb="xl">
          Nos Activit√©s üêæ
        </Title>

        {isMobile ? (
          <Carousel slideSize="70%" slideGap="md" align="start" withIndicators>
            {activities.map((activity) => (
              <Carousel.Slide key={activity.id}>
                <MotionCard
                  p="md"
                  radius="lg"
                  w="100%"
                  bg={selected === activity.id ? "#DDA15E" : "#FEFAE0"}
                  style={{
                    cursor: "pointer",
                    textAlign: "center",
                    border:
                      selected === activity.id
                        ? "2px solid #BC6C25"
                        : "1px solid #DDA15E",
                  }}
                  onClick={() => setSelected(activity.id)}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.98 }}
                  transition={{ type: "spring", stiffness: 300 }}
                >
                  <Image
                    src={activity.image}
                    alt={activity.title}
                    w={60}
                    h={60}
                    mx="auto"
                    mb="sm"
                  />
                  <Title order={4} c="#283618">
                    {activity.title}
                  </Title>
                </MotionCard>
              </Carousel.Slide>
            ))}
          </Carousel>
        ) : (
          <SimpleGrid cols={{ base: 1, sm: 2, md: 4 }} spacing="lg" mb="xl">
            {activities.map((activity) => (
              <MotionCard
                key={activity.id}
                p="md"
                radius="lg"
                bg={selected === activity.id ? "#DDA15E" : "#FEFAE0"}
                style={{
                  cursor: "pointer",
                  textAlign: "center",
                  border:
                    selected === activity.id
                      ? "2px solid #BC6C25"
                      : "1px solid #DDA15E",
                }}
                onClick={() => setSelected(activity.id)}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.98 }}
                transition={{ type: "spring", stiffness: 300 }}
              >
                <Image
                  src={activity.image}
                  alt={activity.title}
                  w={60}
                  h={60}
                  mx="auto"
                  mb="sm"
                />
                <Title order={4} c="#283618">
                  {activity.title}
                </Title>
              </MotionCard>
            ))}
          </SimpleGrid>
        )}

        {active && (
          <MotionGrid
            ref={detailRef}
            align="center"
            initial={{ opacity: 0, y: 40 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
          >
            <Grid.Col span={{ base: 12, md: 6 }}>
              <Image src={active.image} alt={active.title} radius="lg" />
            </Grid.Col>
            <Grid.Col span={{ base: 12, md: 6 }}>
              <Title order={2} c="#283618" mb="sm">
                {active.title}
              </Title>
              <Text c="#606C38" size="lg" mb="sm">
                {active.description}
              </Text>
              <Text c="#283618" fw={600}>
                {active.details}
              </Text>
            </Grid.Col>
          </MotionGrid>
        )}
      </Container>
    </Box>
  );
}
